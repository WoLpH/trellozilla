#!/usr/bin/env python

import re
import requests
import HTMLParser

BUGZILLA_URL = 'http://bugzilla.3xo.eu/show_bug.cgi?id=%(id)s'
DESCRIPTION_PATTERN = '''
[Bugzilla #%(bug_id)s](%(url)s)

%(description)s
'''

try:
    from client import client
except ImportError:
    print '''You need to create a trello client in `client.py`, it should look
    something like this:

    .. highlight:: python

        import trello

        client = trello.TrelloClient(
            api_key='your-key',
            api_secret='your-secret',
            token='your-oauth-token-key',
            token_secret='your-oauth-token-secret',
        )

    :api_key: API key generated at https://trello.com/1/appKey/generate
    :api_secret: the secret component of api_key
    :token_key: OAuth token generated by the user in
                trello.util.create_oauth_token
    :token_secret: the OAuth client secret for the given OAuth token

    You can get the actual input using the `trello_authenticate.py` script with
    the `api_key` and `api_secret` parameters.
    '''

# for board in client.list_boards():
#     print board, board.__dict__

board = client.get_board('54e476a396124a3eec92625a')
parser = HTMLParser.HTMLParser()

for card in board.all_cards():
    match = re.search('(\d{4})', card.name)
    if match and 1000 < int(match.group(1)) < 3000:
        bug_id = match.group(1)
        print 'Bug ID: %s' % bug_id
        assert bug_id.isdigit()

        url = BUGZILLA_URL % dict(id=bug_id)
        request = requests.get(url)
        match = re.search('<title>Bug %s - ([^<]+)</title>' % bug_id,
                          request.text)
        if match:
            title = parser.unescape(match.group(1))
            new_name = '#%(bug_id)s -  %(title)s' % locals()
            if card.name != new_name:
                print 'Setting name from:\n%s\nTo:\n%s' % (card.name, new_name)
                card.set_name(new_name)

            description = card.description
            if not re.search('\[(Bugzilla #\d+)\]', description):
                description = re.sub('\s*\[bugzilla\].*', '', description)

                new_description = (DESCRIPTION_PATTERN % dict(
                    bug_id=bug_id,
                    url=url,
                    description=description.strip(),
                )).strip()

                print 'setting description from:\n%s\n\nTo:\n%s' % (
                    card.description,
                    new_description,
                )
                card.set_description(new_description)
        else:
            print 'Unable to get bugzilla info from: %s' % url

    else:
        print 'Unable to match: %s' % card.name

